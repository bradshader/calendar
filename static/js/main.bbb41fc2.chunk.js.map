{"version":3,"sources":["components/SelectDates.js","components/Month.js","components/InvalidDay.js","components/Day.js","components/App.js","serviceWorker.js","index.js"],"names":["SelectDates","react_default","a","createElement","className","type","value","Component","Month","monthName","year","this","props","month","Fragment","InvalidDay","invalidClass","saturday","Day","isValid","classes","isWeekend","isFirst","dayOfWeek","i","firstInvalidDays","push","components_Month","map","day","index","components_InvalidDay","dayOfMonth","isLast","lastInvalidDays","length","key","class","App","state","dates","Date","firstItem","lastItem","console","log","components_SelectDates","date","components_Day","isDate","getDay","getDate","isFirstDayOfMonth","isLastDayOfMonth","getMonth","getYear","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbb41fc2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nclass SelectDates extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"SelectDates\">\r\n          <form>\r\n            <div className =\"starting\">\r\n              <label>Start date:</label>\r\n              <input type=\"text\" />\r\n            </div>\r\n            <div className =\"ending\">\r\n              <label>End date:</label>\r\n              <input type=\"text\" />\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <input type=\"submit\" value=\"Let's go!\"></input>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectDates;","import React, { Component } from 'react';\r\n\r\nclass Month extends Component {\r\n  render() {\r\n\r\n        let monthName = \"\";\r\n        let year = this.props.year;\r\n\r\n        if (this.props.month === 0) {monthName = \"January\"};\r\n        if (this.props.month === 1) {monthName = \"February\"};\r\n        if (this.props.month === 2) {monthName = \"March\"};\r\n        if (this.props.month === 3) {monthName = \"April\"};\r\n        if (this.props.month === 4) {monthName = \"May\"};\r\n        if (this.props.month === 5) {monthName = \"June\"};\r\n        if (this.props.month === 6) {monthName = \"July\"};\r\n        if (this.props.month === 7) {monthName = \"August\"};\r\n        if (this.props.month === 8) {monthName = \"September\"};\r\n        if (this.props.month === 9) {monthName = \"October\"};\r\n        if (this.props.month === 10) {monthName = \"November\"};\r\n        if (this.props.month === 11) {monthName = \"December\"};\r\n        \r\n\r\n        return(\r\n            <>\r\n            <h2>{monthName} {year}</h2>\r\n            <div className=\"days-of-week\">\r\n              <h3>Sun</h3>\r\n              <h3>Mon</h3>\r\n              <h3>Tue</h3>\r\n              <h3>Wed</h3>\r\n              <h3>Thu</h3>\r\n              <h3>Fri</h3>\r\n              <h3>Sat</h3>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Month;","import React, { Component } from 'react';\r\n\r\nclass InvalidDay extends Component {\r\n  render() {\r\n\r\n    let invalidClass = this.props.saturday ? \"day invalid saturday\" : \"day invalid\";\r\n\r\n    return(\r\n        <div className={invalidClass}>\r\n            <span></span>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InvalidDay;","import React, { Component } from 'react';\r\nimport Month from './Month'\r\nimport InvalidDay from './InvalidDay'\r\n\r\nclass Day extends Component {\r\n  render() {\r\n\r\n    if(this.props.isValid) {\r\n\r\n        \r\n        let weekdayClass = this.props.isWeekend ? \"day weekend\" : \"day weekday\";\r\n        let firstClass = this.props.isFirst ? \"first\" : \"\";\r\n        let isSaturday = this.props.dayOfWeek === 6 ? \"saturday\" : \"\";\r\n\r\n        const classes = weekdayClass + \" \" + firstClass + \" \" + isSaturday;\r\n        \r\n\r\n        if (this.props.isFirst) {\r\n\r\n            let i;\r\n            let firstInvalidDays = [];\r\n            for(i=0; i < this.props.dayOfWeek; i++) {\r\n                firstInvalidDays.push('invalid');\r\n            }\r\n\r\n            return(\r\n                <>\r\n                <Month \r\n                    month={this.props.month} \r\n                    year={this.props.year}/>\r\n                \r\n                {firstInvalidDays.map( (day, index) =>\r\n                    <InvalidDay />\r\n                )}\r\n\r\n                <div className={classes}>\r\n                    <span>{this.props.dayOfMonth}</span>\r\n                </div>\r\n                </>\r\n            );\r\n\r\n        } else if (this.props.isLast) {\r\n\r\n            let i;\r\n            let lastInvalidDays = [];\r\n            for(i=this.props.dayOfWeek; i < 6; i++) {\r\n                lastInvalidDays.push('invalid');\r\n            }\r\n\r\n            return (\r\n                <>\r\n                <div className={classes}>\r\n                    <span>{this.props.dayOfMonth}</span>\r\n                </div>\r\n\r\n                {\r\n                lastInvalidDays.map((day, i) => {\r\n                    if(lastInvalidDays.length === i + 1) {\r\n                        return(<InvalidDay key={i} saturday={true} />)\r\n                    } else {\r\n                        return(<InvalidDay key={i} />)\r\n                    }\r\n                })\r\n                }\r\n\r\n                <div class=\"bottom-border\"></div>\r\n                </>\r\n            );\r\n\r\n            \r\n        } else {\r\n            return (\r\n                <div className={classes}>\r\n                    <span>{this.props.dayOfMonth}</span>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    else \r\n    {\r\n        return (\r\n            <div className=\"day invalid\">\r\n                <span></span>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default Day;","import React, { Component } from 'react';\nimport SelectDates from './SelectDates';\nimport Day from './Day';\nimport {  isDate, getDate, getDay, isWeekend, isFirstDayOfMonth, isLastDayOfMonth, getMonth, getYear } from 'date-fns';\n\nclass App extends Component {\n\n  state = {\n    dates: [\n      new Date(2019, 2, 20),\n      new Date(2019, 2, 21),\n      new Date(2019, 2, 22),\n      new Date(2019, 2, 23),\n      new Date(2019, 2, 24),\n      new Date(2019, 2, 25),\n      new Date(2019, 2, 26),\n      new Date(2019, 2, 27),\n      new Date(2019, 2, 28),\n      new Date(2019, 2, 29),\n      new Date(2019, 2, 30),\n      new Date(2019, 2, 31),\n      new Date(2019, 3, 1),\n      new Date(2019, 3, 2),\n      new Date(2019, 3, 3),\n      new Date(2019, 3, 4),\n      new Date(2019, 3, 5),\n      new Date(2019, 3, 6),\n      new Date(2019, 3, 7),\n      new Date(2019, 3, 8),\n      new Date(2019, 3, 9),\n      new Date(2019, 3, 10)\n    ]\n  };\n\n\n\n  render() {\n    \n    const firstItem = this.state.dates[0];\n    const lastItem = this.state.dates[this.state.dates.length-1];\n    console.log(lastItem);\n\n    return (\n      \n      <div className=\"App\">\n        <h1>Calendar generator</h1>\n        \n        <SelectDates />\n\n        <div className=\"result\">\n\n            {\n              this.state.dates.map( (date, index) =>\n              <Day \n                index={index}\n                isValid = {isDate(date)}\n                dayOfWeek = {getDay(date)}\n                isWeekend = {isWeekend(date)}\n                dayOfMonth = {getDate(date)}\n                isFirst = {isFirstDayOfMonth(date) || date === firstItem}\n                isLast = {isLastDayOfMonth(date) || date === lastItem}\n                month = {getMonth(date)}\n                year = {getYear(date)}\n              />\n            )}\n\n          </div> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}